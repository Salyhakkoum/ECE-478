# ECE478 Homework 1
# Fuzzy Logic Simulation

class FuzzySet(object):
	def __init__(self, x1, x2):
		self.x1 = x1
		self.x2 = x2

	def membership(self, x, y):
		temp = int(y)
		if (temp == 100):
			if (x < self.x1 or x > self.x2):
				return 0.0
			elif (x > 0 and x <= 20):
				return 1/5
			elif (x > 20 and x <= 40):
				return 2/5
			elif (x > 40 and x <= 60):
				return 3/5
			elif (x > 60 and x <= 80):
				return 4/5
			elif (x > 80 and x <= 100):
				return 1

		if (temp == 180):
			if x < self.x1 or x > self.x2:		
				return 0.0		
			if (x > 0 and x <= 60):		
				return 1/3		
			if (x > 60 and x <= 120):		
				return 2/3		
			if (x > 120 and x <= 180):		
				return 1.0	

def main():
        # Settin up the input variables
        # Distance are measured in centimeters
        Distance 	= 0.0
        VeryClose	= FuzzySet(0, 20)
        Close	    = FuzzySet(20, 40)
        Medium 		= FuzzySet(40, 60)
        Far 		= FuzzySet(60, 80)
        VeryFar		= FuzzySet(80,100)
        Distance 	= float(input("Please input the distance between the robot and the obstacle:\n"))

        # Angles are measured in degrees
        Angle 	= 0.0
        Right   = FuzzySet(0, 60)
        Middle  = FuzzySet(60, 120)
        Left    = FuzzySet(120, 180)
        Angle 	= float(input("Please input the angle between the robot and the target destination:\n"))

        # Setting up the output 
        Output 		= 0.0
        Stop 		= 5.0
        SlowDown 	= 3.0
        MoveForward = 2.0
        TurnLeft 	= 1.0
        TurnRight 	= 1.0

        #main logic
        #(1) IF (Angle is Middle) AND (Distance is VERY FAR) 
        #THEN MOVE FORWARD
        Output += MoveForward * Middle.membership(Angle,180) * VeryFar.membership(Distance,100)
        print(Output)
        #(2) IF (Angle is Middle) AND (Distance is FAR) 
        #THEN Move Forward
        Output += MoveForward * Middle.membership(Angle,180) * Far.membership(Distance,100)
        print(Output)
        #(3) IF (Angle is Middle) AND (Distance is Medium) 
        #THEN SLOW DOWN
        Output += SlowDown * Middle.membership(Angle,180) * Medium.membership(Distance,100)
        print(Output)
        #(4) IF (Angle is Middle) AND (Distance is CLOSE) 
        #THEN SLOW DOWN
        Output += SlowDown * Middle.membership(Angle,180) * Close.membership(Distance,100)
        print(Output)
        #(5) IF (Angle is Middle) AND (Distance is VeryClose) 
        #THEN Stop
        Output += Stop * Middle.membership(Angle,180) * VeryClose.membership(Distance,100)
        print(Output)

        #(6) IF (Angle is Right) AND (Distance is VERY FAR) 
        #THEN MOVE FORWARD
        Output += MoveForward * Right.membership(Angle,180) * VeryFar.membership(Distance,100)
        print(Output)
        #(7) IF (Angle is Right) AND (Distance is FAR) 
        #THEN MOVE FORWARD
        Output += MoveForward * Right.membership(Angle,180) * Far.membership(Distance,100)
        print(Output)
        #(8) IF (Angle is Right) AND (Distance is Medium) 
        #THEN SLOW DOWN 
        Output += SlowDown * Right.membership(Angle,180) * Medium.membership(Distance,100)
        print(Output)
        #(9) IF (Angle is Right) AND (Distance is CLOSE) 
        #THEN TURN RIGHT
        Output += TurnRight * Right.membership(Angle,180) * Close.membership(Distance,100)
        print(Output)
        #(10) IF (Angle is Right) AND (Distance is VeryClose) 
        #THEN STOP
        Output += Stop + Right.membership(Angle,180) * VeryClose.membership(Distance,100)
        print(Output)

        #(11) IF (Angle is Left) AND (Distance is VERY FAR) 
        #THEN MOVE FORWARD
        Output += MoveForward * Left.membership(Angle,180) * VeryFar.membership(Distance,100)
        print(Output)
        #(12) IF (Angle is Left) AND (Distance is FAR) 
        #THEN MOVE FORWARD
        Output += MoveForward * Left.membership(Angle,180) * Far.membership(Distance,100)
        print(Output)
        #(13) IF (Angle is Left) AND (Distance is Medium) 
        #THEN SLOW DOWN
        Output += SlowDown * Left.membership(Angle,180) * Medium.membership(Distance,100)
        print(Output)
        #(14) IF (Angle is Left) AND (Distance is CLOSE) 
        #THEN TURN LEFT
        Output += TurnLeft * Left.membership(Angle,180) * Close.membership(Distance,100)
        print(Output)
        #(15) IF (Angle is Left) AND (Distance is VeryClose) 
        #THEN STOP
        Output += Stop * Left.membership(Angle,180) * VeryClose.membership(Distance,100)
        print(Output)

        
        print("Distance: %f\tAngle: %f\nOutput_command %f" % (Distance, Angle, Output))


if __name__=="__main__":
    main()
